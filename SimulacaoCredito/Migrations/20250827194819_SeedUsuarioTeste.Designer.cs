// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimulacaoCredito.Infrastructure.Data;

#nullable disable

namespace SimulacaoCredito.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250827194819_SeedUsuarioTeste")]
    partial class SeedUsuarioTeste
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SimulacaoCredito.Domain.Entities.Parcela", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<long>("SimulacaoId")
                        .HasColumnType("bigint");

                    b.Property<byte>("TipoAmortizacao")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("ValorAmortizacao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorJuros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorPrestacao")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SimulacaoId", "TipoAmortizacao")
                        .HasDatabaseName("IX_Parcela_SimulacaoId_TipoAmortizacao");

                    b.ToTable("Parcela", "dbo");
                });

            modelBuilder.Entity("SimulacaoCredito.Domain.Entities.Simulacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CodigoProduto")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<string>("DescricaoProduto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Prazo")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxaJuros")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("ValorDesejado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotalParcelas")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoProduto")
                        .HasDatabaseName("IX_Simulacao_CodigoProduto");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Simulacao_DataCriacao");

                    b.ToTable("Simulacao", "dbo");
                });

            modelBuilder.Entity("SimulacaoCredito.Domain.Entities.TelemetriaRequisicao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnderecoIp")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Erro")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NomeApi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.Property<bool>("Sucesso")
                        .HasColumnType("bit");

                    b.Property<int>("TempoResposta")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DataHora")
                        .HasDatabaseName("IX_TelemetriaRequisicao_DataHora");

                    b.HasIndex("NomeApi")
                        .HasDatabaseName("IX_TelemetriaRequisicao_NomeApi");

                    b.ToTable("TelemetriaRequisicao", "dbo");
                });

            modelBuilder.Entity("SimulacaoCredito.Domain.Entities.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<bool>("ContaBloqueada")
                        .HasColumnType("bit")
                        .HasColumnName("ContaBloqueada");

                    b.Property<DateTimeOffset?>("DataBloqueio")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("DataBloqueio");

                    b.Property<DateTimeOffset>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<DateTimeOffset?>("DataUltimoLogin")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("DataUltimoLogin");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("NomeCompleto")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NomeCompleto");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PasswordHash");

                    b.Property<int>("TentativasLogin")
                        .HasColumnType("int")
                        .HasColumnName("TentativasLogin");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("IX_Usuario_Ativo");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Usuario_DataCriacao");

                    b.HasIndex("Email")
                        .HasDatabaseName("IX_Usuario_Email");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("IX_Usuario_Username");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SimulacaoCredito.Domain.Entities.Parcela", b =>
                {
                    b.HasOne("SimulacaoCredito.Domain.Entities.Simulacao", "Simulacao")
                        .WithMany("Parcelas")
                        .HasForeignKey("SimulacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Simulacao");
                });

            modelBuilder.Entity("SimulacaoCredito.Domain.Entities.Simulacao", b =>
                {
                    b.Navigation("Parcelas");
                });
#pragma warning restore 612, 618
        }
    }
}
